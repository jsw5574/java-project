# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven push ACR Deploy AKS

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
        runs-on: ubuntu-latest
        
        steps:
        - uses: actions/checkout@v3

          
          
#       - name: 'Checkout GitHub Action'
  #       uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}



    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

        # Use kubelogin to configure your kubeconfig for Azure auth
        - name: Set up kubelogin for non-interactive login
          uses: azure/use-kubelogin@v1
          with:
            kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
        - name: Get K8s context
          uses: azure/aks-set-context@v3
          with:
            resource-group: swjeong-rg
            cluster-name: swjeong-aks
            admin: 'false'
            use-kubelogin: 'true'

      # Deploys application based on given manifest file
        - name: Deploys application
          uses: Azure/k8s-deploy@v4
          with:
 #           namespace: 'ns-classbox'
            action: deploy
            manifests: ./manifest
