---
apiVersion: v1
kind: Namespace
metadata:
  name: ns-classbox
  labels: {
      type: "development",
      name: "ns-classbox"
    }
---
kind: Service
apiVersion: v1
metadata:
  name: svc-classbox-www
  namespace: ns-classbox
spec:
  type: NodePort
  selector:
    app: pod-www
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-csi-controller-sa
  namespace: ns-classbox
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aks-managed-disk
  namespace: ns-classbox
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: managed
  resources:
    requests:
      storage: 32Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-www
  namespace: ns-classbox
spec:
  replicas: 1
  minReadySeconds: 60
  selector:
    matchLabels:
      app: pod-www
  template:
    metadata:
      name: pod-www
      labels: {
        app: pod-www,
        name: pod-www,
        type: development
      }
    spec:
      containers:
      - name: pod-www
        image: swjeongacr.azurecr.io/f331a80518fd1d9e4373fb17bda8bc31d0a854a6
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
        resources:
          requests:
            memory: "2Gi"
            cpu: "250m"
          limits:
            memory: "3Gi"
            cpu: "550m"
        volumeMounts:
        - name: persistent-storage
          mountPath: /usr/local/tomcat/logs
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 20  
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 10
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: aks-managed-disk
